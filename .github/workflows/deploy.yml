name: Deploy To EC2

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4

      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: 빌드된 파일 이름 변경하기
        run: mv ./build/libs/*SNAPSHOT.jar ./project.jar

      - name: SCP로 EC2에 빌드된 파일 전송하기
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: project.jar
          target: /home/ubuntu/springboot-web/tobe

      - name: SSH(원격 접속)로 EC2에 접속하기
        uses: appleboy/ssh-action@v1.0.3 # Github Action 라이브러리
        with:
          host: ${{ secrets.EC2_HOST }} # EC2의 주소
          username: ${{ secrets.EC2_USERNAME }} # EC2 접속 username
          key: ${{ secrets.EC2_PRIVATE_KEY }} # EC2의 Key 파일의 내부 텍스트
          script_stop: true # 아래 script 중 실패하는 명령이 하나라도 있으면 실패로 처리
          script: | 
            rm -rf /home/ubuntu/springboot-web/current # 기존 배포 디렉토리 삭제
            mkdir /home/ubuntu/springboot-web/current # 새로운 배포 디렉토리 생성
            mv /home/ubuntu/springboot-web/tobe/project.jar /home/ubuntu/springboot-web/current/project.jar # JAR 파일 이동
            cd /home/ubuntu/springboot-web/current # 작업 디렉토리 변경
            sudo fuser -k -n tcp 8080 || true # 8080 포트 사용 중인 프로세스 종료 (종료 실패 시 에러 무시)
            nohup java -jar project.jar > ./output.log 2>&1 & # JAR 파일 실행 (백그라운드, 로그 출력)
            rm -rf /home/ubuntu/springboot-web/tobe # 임시 디렉토리 삭제